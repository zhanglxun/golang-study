// Code generated by ent, DO NOT EDIT.

package cwebsite

import (
	"golangStudy/2.web/8.ent/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int64) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int64) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int64) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int64) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int64) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int64) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int64) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int64) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int64) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldLTE(FieldID, id))
}

// SortID applies equality check predicate on the "sort_id" field. It's identical to SortIDEQ.
func SortID(v int32) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldEQ(FieldSortID, v))
}

// Category applies equality check predicate on the "category" field. It's identical to CategoryEQ.
func Category(v int32) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldEQ(FieldCategory, v))
}

// Type applies equality check predicate on the "type" field. It's identical to TypeEQ.
func Type(v int32) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldEQ(FieldType, v))
}

// WebsiteName applies equality check predicate on the "website_name" field. It's identical to WebsiteNameEQ.
func WebsiteName(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldEQ(FieldWebsiteName, v))
}

// WebsiteIcon applies equality check predicate on the "website_icon" field. It's identical to WebsiteIconEQ.
func WebsiteIcon(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldEQ(FieldWebsiteIcon, v))
}

// WebsiteURL applies equality check predicate on the "website_url" field. It's identical to WebsiteURLEQ.
func WebsiteURL(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldEQ(FieldWebsiteURL, v))
}

// Summary applies equality check predicate on the "summary" field. It's identical to SummaryEQ.
func Summary(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldEQ(FieldSummary, v))
}

// Description applies equality check predicate on the "description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldEQ(FieldDescription, v))
}

// CreateID applies equality check predicate on the "create_id" field. It's identical to CreateIDEQ.
func CreateID(v int64) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldEQ(FieldCreateID, v))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v time.Time) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldEQ(FieldCreateTime, v))
}

// ModifyID applies equality check predicate on the "modify_id" field. It's identical to ModifyIDEQ.
func ModifyID(v int64) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldEQ(FieldModifyID, v))
}

// ModifyTime applies equality check predicate on the "modify_time" field. It's identical to ModifyTimeEQ.
func ModifyTime(v time.Time) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldEQ(FieldModifyTime, v))
}

// SortIDEQ applies the EQ predicate on the "sort_id" field.
func SortIDEQ(v int32) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldEQ(FieldSortID, v))
}

// SortIDNEQ applies the NEQ predicate on the "sort_id" field.
func SortIDNEQ(v int32) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldNEQ(FieldSortID, v))
}

// SortIDIn applies the In predicate on the "sort_id" field.
func SortIDIn(vs ...int32) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldIn(FieldSortID, vs...))
}

// SortIDNotIn applies the NotIn predicate on the "sort_id" field.
func SortIDNotIn(vs ...int32) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldNotIn(FieldSortID, vs...))
}

// SortIDGT applies the GT predicate on the "sort_id" field.
func SortIDGT(v int32) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldGT(FieldSortID, v))
}

// SortIDGTE applies the GTE predicate on the "sort_id" field.
func SortIDGTE(v int32) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldGTE(FieldSortID, v))
}

// SortIDLT applies the LT predicate on the "sort_id" field.
func SortIDLT(v int32) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldLT(FieldSortID, v))
}

// SortIDLTE applies the LTE predicate on the "sort_id" field.
func SortIDLTE(v int32) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldLTE(FieldSortID, v))
}

// SortIDIsNil applies the IsNil predicate on the "sort_id" field.
func SortIDIsNil() predicate.CWebsite {
	return predicate.CWebsite(sql.FieldIsNull(FieldSortID))
}

// SortIDNotNil applies the NotNil predicate on the "sort_id" field.
func SortIDNotNil() predicate.CWebsite {
	return predicate.CWebsite(sql.FieldNotNull(FieldSortID))
}

// CategoryEQ applies the EQ predicate on the "category" field.
func CategoryEQ(v int32) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldEQ(FieldCategory, v))
}

// CategoryNEQ applies the NEQ predicate on the "category" field.
func CategoryNEQ(v int32) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldNEQ(FieldCategory, v))
}

// CategoryIn applies the In predicate on the "category" field.
func CategoryIn(vs ...int32) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldIn(FieldCategory, vs...))
}

// CategoryNotIn applies the NotIn predicate on the "category" field.
func CategoryNotIn(vs ...int32) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldNotIn(FieldCategory, vs...))
}

// CategoryGT applies the GT predicate on the "category" field.
func CategoryGT(v int32) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldGT(FieldCategory, v))
}

// CategoryGTE applies the GTE predicate on the "category" field.
func CategoryGTE(v int32) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldGTE(FieldCategory, v))
}

// CategoryLT applies the LT predicate on the "category" field.
func CategoryLT(v int32) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldLT(FieldCategory, v))
}

// CategoryLTE applies the LTE predicate on the "category" field.
func CategoryLTE(v int32) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldLTE(FieldCategory, v))
}

// CategoryIsNil applies the IsNil predicate on the "category" field.
func CategoryIsNil() predicate.CWebsite {
	return predicate.CWebsite(sql.FieldIsNull(FieldCategory))
}

// CategoryNotNil applies the NotNil predicate on the "category" field.
func CategoryNotNil() predicate.CWebsite {
	return predicate.CWebsite(sql.FieldNotNull(FieldCategory))
}

// TypeEQ applies the EQ predicate on the "type" field.
func TypeEQ(v int32) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldEQ(FieldType, v))
}

// TypeNEQ applies the NEQ predicate on the "type" field.
func TypeNEQ(v int32) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldNEQ(FieldType, v))
}

// TypeIn applies the In predicate on the "type" field.
func TypeIn(vs ...int32) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldIn(FieldType, vs...))
}

// TypeNotIn applies the NotIn predicate on the "type" field.
func TypeNotIn(vs ...int32) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldNotIn(FieldType, vs...))
}

// TypeGT applies the GT predicate on the "type" field.
func TypeGT(v int32) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldGT(FieldType, v))
}

// TypeGTE applies the GTE predicate on the "type" field.
func TypeGTE(v int32) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldGTE(FieldType, v))
}

// TypeLT applies the LT predicate on the "type" field.
func TypeLT(v int32) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldLT(FieldType, v))
}

// TypeLTE applies the LTE predicate on the "type" field.
func TypeLTE(v int32) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldLTE(FieldType, v))
}

// TypeIsNil applies the IsNil predicate on the "type" field.
func TypeIsNil() predicate.CWebsite {
	return predicate.CWebsite(sql.FieldIsNull(FieldType))
}

// TypeNotNil applies the NotNil predicate on the "type" field.
func TypeNotNil() predicate.CWebsite {
	return predicate.CWebsite(sql.FieldNotNull(FieldType))
}

// WebsiteNameEQ applies the EQ predicate on the "website_name" field.
func WebsiteNameEQ(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldEQ(FieldWebsiteName, v))
}

// WebsiteNameNEQ applies the NEQ predicate on the "website_name" field.
func WebsiteNameNEQ(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldNEQ(FieldWebsiteName, v))
}

// WebsiteNameIn applies the In predicate on the "website_name" field.
func WebsiteNameIn(vs ...string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldIn(FieldWebsiteName, vs...))
}

// WebsiteNameNotIn applies the NotIn predicate on the "website_name" field.
func WebsiteNameNotIn(vs ...string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldNotIn(FieldWebsiteName, vs...))
}

// WebsiteNameGT applies the GT predicate on the "website_name" field.
func WebsiteNameGT(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldGT(FieldWebsiteName, v))
}

// WebsiteNameGTE applies the GTE predicate on the "website_name" field.
func WebsiteNameGTE(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldGTE(FieldWebsiteName, v))
}

// WebsiteNameLT applies the LT predicate on the "website_name" field.
func WebsiteNameLT(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldLT(FieldWebsiteName, v))
}

// WebsiteNameLTE applies the LTE predicate on the "website_name" field.
func WebsiteNameLTE(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldLTE(FieldWebsiteName, v))
}

// WebsiteNameContains applies the Contains predicate on the "website_name" field.
func WebsiteNameContains(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldContains(FieldWebsiteName, v))
}

// WebsiteNameHasPrefix applies the HasPrefix predicate on the "website_name" field.
func WebsiteNameHasPrefix(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldHasPrefix(FieldWebsiteName, v))
}

// WebsiteNameHasSuffix applies the HasSuffix predicate on the "website_name" field.
func WebsiteNameHasSuffix(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldHasSuffix(FieldWebsiteName, v))
}

// WebsiteNameIsNil applies the IsNil predicate on the "website_name" field.
func WebsiteNameIsNil() predicate.CWebsite {
	return predicate.CWebsite(sql.FieldIsNull(FieldWebsiteName))
}

// WebsiteNameNotNil applies the NotNil predicate on the "website_name" field.
func WebsiteNameNotNil() predicate.CWebsite {
	return predicate.CWebsite(sql.FieldNotNull(FieldWebsiteName))
}

// WebsiteNameEqualFold applies the EqualFold predicate on the "website_name" field.
func WebsiteNameEqualFold(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldEqualFold(FieldWebsiteName, v))
}

// WebsiteNameContainsFold applies the ContainsFold predicate on the "website_name" field.
func WebsiteNameContainsFold(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldContainsFold(FieldWebsiteName, v))
}

// WebsiteIconEQ applies the EQ predicate on the "website_icon" field.
func WebsiteIconEQ(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldEQ(FieldWebsiteIcon, v))
}

// WebsiteIconNEQ applies the NEQ predicate on the "website_icon" field.
func WebsiteIconNEQ(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldNEQ(FieldWebsiteIcon, v))
}

// WebsiteIconIn applies the In predicate on the "website_icon" field.
func WebsiteIconIn(vs ...string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldIn(FieldWebsiteIcon, vs...))
}

// WebsiteIconNotIn applies the NotIn predicate on the "website_icon" field.
func WebsiteIconNotIn(vs ...string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldNotIn(FieldWebsiteIcon, vs...))
}

// WebsiteIconGT applies the GT predicate on the "website_icon" field.
func WebsiteIconGT(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldGT(FieldWebsiteIcon, v))
}

// WebsiteIconGTE applies the GTE predicate on the "website_icon" field.
func WebsiteIconGTE(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldGTE(FieldWebsiteIcon, v))
}

// WebsiteIconLT applies the LT predicate on the "website_icon" field.
func WebsiteIconLT(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldLT(FieldWebsiteIcon, v))
}

// WebsiteIconLTE applies the LTE predicate on the "website_icon" field.
func WebsiteIconLTE(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldLTE(FieldWebsiteIcon, v))
}

// WebsiteIconContains applies the Contains predicate on the "website_icon" field.
func WebsiteIconContains(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldContains(FieldWebsiteIcon, v))
}

// WebsiteIconHasPrefix applies the HasPrefix predicate on the "website_icon" field.
func WebsiteIconHasPrefix(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldHasPrefix(FieldWebsiteIcon, v))
}

// WebsiteIconHasSuffix applies the HasSuffix predicate on the "website_icon" field.
func WebsiteIconHasSuffix(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldHasSuffix(FieldWebsiteIcon, v))
}

// WebsiteIconIsNil applies the IsNil predicate on the "website_icon" field.
func WebsiteIconIsNil() predicate.CWebsite {
	return predicate.CWebsite(sql.FieldIsNull(FieldWebsiteIcon))
}

// WebsiteIconNotNil applies the NotNil predicate on the "website_icon" field.
func WebsiteIconNotNil() predicate.CWebsite {
	return predicate.CWebsite(sql.FieldNotNull(FieldWebsiteIcon))
}

// WebsiteIconEqualFold applies the EqualFold predicate on the "website_icon" field.
func WebsiteIconEqualFold(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldEqualFold(FieldWebsiteIcon, v))
}

// WebsiteIconContainsFold applies the ContainsFold predicate on the "website_icon" field.
func WebsiteIconContainsFold(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldContainsFold(FieldWebsiteIcon, v))
}

// WebsiteURLEQ applies the EQ predicate on the "website_url" field.
func WebsiteURLEQ(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldEQ(FieldWebsiteURL, v))
}

// WebsiteURLNEQ applies the NEQ predicate on the "website_url" field.
func WebsiteURLNEQ(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldNEQ(FieldWebsiteURL, v))
}

// WebsiteURLIn applies the In predicate on the "website_url" field.
func WebsiteURLIn(vs ...string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldIn(FieldWebsiteURL, vs...))
}

// WebsiteURLNotIn applies the NotIn predicate on the "website_url" field.
func WebsiteURLNotIn(vs ...string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldNotIn(FieldWebsiteURL, vs...))
}

// WebsiteURLGT applies the GT predicate on the "website_url" field.
func WebsiteURLGT(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldGT(FieldWebsiteURL, v))
}

// WebsiteURLGTE applies the GTE predicate on the "website_url" field.
func WebsiteURLGTE(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldGTE(FieldWebsiteURL, v))
}

// WebsiteURLLT applies the LT predicate on the "website_url" field.
func WebsiteURLLT(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldLT(FieldWebsiteURL, v))
}

// WebsiteURLLTE applies the LTE predicate on the "website_url" field.
func WebsiteURLLTE(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldLTE(FieldWebsiteURL, v))
}

// WebsiteURLContains applies the Contains predicate on the "website_url" field.
func WebsiteURLContains(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldContains(FieldWebsiteURL, v))
}

// WebsiteURLHasPrefix applies the HasPrefix predicate on the "website_url" field.
func WebsiteURLHasPrefix(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldHasPrefix(FieldWebsiteURL, v))
}

// WebsiteURLHasSuffix applies the HasSuffix predicate on the "website_url" field.
func WebsiteURLHasSuffix(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldHasSuffix(FieldWebsiteURL, v))
}

// WebsiteURLIsNil applies the IsNil predicate on the "website_url" field.
func WebsiteURLIsNil() predicate.CWebsite {
	return predicate.CWebsite(sql.FieldIsNull(FieldWebsiteURL))
}

// WebsiteURLNotNil applies the NotNil predicate on the "website_url" field.
func WebsiteURLNotNil() predicate.CWebsite {
	return predicate.CWebsite(sql.FieldNotNull(FieldWebsiteURL))
}

// WebsiteURLEqualFold applies the EqualFold predicate on the "website_url" field.
func WebsiteURLEqualFold(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldEqualFold(FieldWebsiteURL, v))
}

// WebsiteURLContainsFold applies the ContainsFold predicate on the "website_url" field.
func WebsiteURLContainsFold(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldContainsFold(FieldWebsiteURL, v))
}

// SummaryEQ applies the EQ predicate on the "summary" field.
func SummaryEQ(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldEQ(FieldSummary, v))
}

// SummaryNEQ applies the NEQ predicate on the "summary" field.
func SummaryNEQ(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldNEQ(FieldSummary, v))
}

// SummaryIn applies the In predicate on the "summary" field.
func SummaryIn(vs ...string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldIn(FieldSummary, vs...))
}

// SummaryNotIn applies the NotIn predicate on the "summary" field.
func SummaryNotIn(vs ...string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldNotIn(FieldSummary, vs...))
}

// SummaryGT applies the GT predicate on the "summary" field.
func SummaryGT(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldGT(FieldSummary, v))
}

// SummaryGTE applies the GTE predicate on the "summary" field.
func SummaryGTE(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldGTE(FieldSummary, v))
}

// SummaryLT applies the LT predicate on the "summary" field.
func SummaryLT(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldLT(FieldSummary, v))
}

// SummaryLTE applies the LTE predicate on the "summary" field.
func SummaryLTE(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldLTE(FieldSummary, v))
}

// SummaryContains applies the Contains predicate on the "summary" field.
func SummaryContains(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldContains(FieldSummary, v))
}

// SummaryHasPrefix applies the HasPrefix predicate on the "summary" field.
func SummaryHasPrefix(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldHasPrefix(FieldSummary, v))
}

// SummaryHasSuffix applies the HasSuffix predicate on the "summary" field.
func SummaryHasSuffix(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldHasSuffix(FieldSummary, v))
}

// SummaryIsNil applies the IsNil predicate on the "summary" field.
func SummaryIsNil() predicate.CWebsite {
	return predicate.CWebsite(sql.FieldIsNull(FieldSummary))
}

// SummaryNotNil applies the NotNil predicate on the "summary" field.
func SummaryNotNil() predicate.CWebsite {
	return predicate.CWebsite(sql.FieldNotNull(FieldSummary))
}

// SummaryEqualFold applies the EqualFold predicate on the "summary" field.
func SummaryEqualFold(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldEqualFold(FieldSummary, v))
}

// SummaryContainsFold applies the ContainsFold predicate on the "summary" field.
func SummaryContainsFold(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldContainsFold(FieldSummary, v))
}

// DescriptionEQ applies the EQ predicate on the "description" field.
func DescriptionEQ(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "description" field.
func DescriptionNEQ(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "description" field.
func DescriptionIn(vs ...string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "description" field.
func DescriptionNotIn(vs ...string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "description" field.
func DescriptionGT(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "description" field.
func DescriptionGTE(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "description" field.
func DescriptionLT(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "description" field.
func DescriptionLTE(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "description" field.
func DescriptionContains(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "description" field.
func DescriptionHasPrefix(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "description" field.
func DescriptionHasSuffix(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionIsNil applies the IsNil predicate on the "description" field.
func DescriptionIsNil() predicate.CWebsite {
	return predicate.CWebsite(sql.FieldIsNull(FieldDescription))
}

// DescriptionNotNil applies the NotNil predicate on the "description" field.
func DescriptionNotNil() predicate.CWebsite {
	return predicate.CWebsite(sql.FieldNotNull(FieldDescription))
}

// DescriptionEqualFold applies the EqualFold predicate on the "description" field.
func DescriptionEqualFold(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "description" field.
func DescriptionContainsFold(v string) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldContainsFold(FieldDescription, v))
}

// CreateIDEQ applies the EQ predicate on the "create_id" field.
func CreateIDEQ(v int64) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldEQ(FieldCreateID, v))
}

// CreateIDNEQ applies the NEQ predicate on the "create_id" field.
func CreateIDNEQ(v int64) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldNEQ(FieldCreateID, v))
}

// CreateIDIn applies the In predicate on the "create_id" field.
func CreateIDIn(vs ...int64) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldIn(FieldCreateID, vs...))
}

// CreateIDNotIn applies the NotIn predicate on the "create_id" field.
func CreateIDNotIn(vs ...int64) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldNotIn(FieldCreateID, vs...))
}

// CreateIDGT applies the GT predicate on the "create_id" field.
func CreateIDGT(v int64) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldGT(FieldCreateID, v))
}

// CreateIDGTE applies the GTE predicate on the "create_id" field.
func CreateIDGTE(v int64) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldGTE(FieldCreateID, v))
}

// CreateIDLT applies the LT predicate on the "create_id" field.
func CreateIDLT(v int64) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldLT(FieldCreateID, v))
}

// CreateIDLTE applies the LTE predicate on the "create_id" field.
func CreateIDLTE(v int64) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldLTE(FieldCreateID, v))
}

// CreateIDIsNil applies the IsNil predicate on the "create_id" field.
func CreateIDIsNil() predicate.CWebsite {
	return predicate.CWebsite(sql.FieldIsNull(FieldCreateID))
}

// CreateIDNotNil applies the NotNil predicate on the "create_id" field.
func CreateIDNotNil() predicate.CWebsite {
	return predicate.CWebsite(sql.FieldNotNull(FieldCreateID))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v time.Time) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v time.Time) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...time.Time) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...time.Time) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v time.Time) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v time.Time) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v time.Time) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v time.Time) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldLTE(FieldCreateTime, v))
}

// CreateTimeIsNil applies the IsNil predicate on the "create_time" field.
func CreateTimeIsNil() predicate.CWebsite {
	return predicate.CWebsite(sql.FieldIsNull(FieldCreateTime))
}

// CreateTimeNotNil applies the NotNil predicate on the "create_time" field.
func CreateTimeNotNil() predicate.CWebsite {
	return predicate.CWebsite(sql.FieldNotNull(FieldCreateTime))
}

// ModifyIDEQ applies the EQ predicate on the "modify_id" field.
func ModifyIDEQ(v int64) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldEQ(FieldModifyID, v))
}

// ModifyIDNEQ applies the NEQ predicate on the "modify_id" field.
func ModifyIDNEQ(v int64) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldNEQ(FieldModifyID, v))
}

// ModifyIDIn applies the In predicate on the "modify_id" field.
func ModifyIDIn(vs ...int64) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldIn(FieldModifyID, vs...))
}

// ModifyIDNotIn applies the NotIn predicate on the "modify_id" field.
func ModifyIDNotIn(vs ...int64) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldNotIn(FieldModifyID, vs...))
}

// ModifyIDGT applies the GT predicate on the "modify_id" field.
func ModifyIDGT(v int64) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldGT(FieldModifyID, v))
}

// ModifyIDGTE applies the GTE predicate on the "modify_id" field.
func ModifyIDGTE(v int64) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldGTE(FieldModifyID, v))
}

// ModifyIDLT applies the LT predicate on the "modify_id" field.
func ModifyIDLT(v int64) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldLT(FieldModifyID, v))
}

// ModifyIDLTE applies the LTE predicate on the "modify_id" field.
func ModifyIDLTE(v int64) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldLTE(FieldModifyID, v))
}

// ModifyIDIsNil applies the IsNil predicate on the "modify_id" field.
func ModifyIDIsNil() predicate.CWebsite {
	return predicate.CWebsite(sql.FieldIsNull(FieldModifyID))
}

// ModifyIDNotNil applies the NotNil predicate on the "modify_id" field.
func ModifyIDNotNil() predicate.CWebsite {
	return predicate.CWebsite(sql.FieldNotNull(FieldModifyID))
}

// ModifyTimeEQ applies the EQ predicate on the "modify_time" field.
func ModifyTimeEQ(v time.Time) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldEQ(FieldModifyTime, v))
}

// ModifyTimeNEQ applies the NEQ predicate on the "modify_time" field.
func ModifyTimeNEQ(v time.Time) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldNEQ(FieldModifyTime, v))
}

// ModifyTimeIn applies the In predicate on the "modify_time" field.
func ModifyTimeIn(vs ...time.Time) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldIn(FieldModifyTime, vs...))
}

// ModifyTimeNotIn applies the NotIn predicate on the "modify_time" field.
func ModifyTimeNotIn(vs ...time.Time) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldNotIn(FieldModifyTime, vs...))
}

// ModifyTimeGT applies the GT predicate on the "modify_time" field.
func ModifyTimeGT(v time.Time) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldGT(FieldModifyTime, v))
}

// ModifyTimeGTE applies the GTE predicate on the "modify_time" field.
func ModifyTimeGTE(v time.Time) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldGTE(FieldModifyTime, v))
}

// ModifyTimeLT applies the LT predicate on the "modify_time" field.
func ModifyTimeLT(v time.Time) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldLT(FieldModifyTime, v))
}

// ModifyTimeLTE applies the LTE predicate on the "modify_time" field.
func ModifyTimeLTE(v time.Time) predicate.CWebsite {
	return predicate.CWebsite(sql.FieldLTE(FieldModifyTime, v))
}

// ModifyTimeIsNil applies the IsNil predicate on the "modify_time" field.
func ModifyTimeIsNil() predicate.CWebsite {
	return predicate.CWebsite(sql.FieldIsNull(FieldModifyTime))
}

// ModifyTimeNotNil applies the NotNil predicate on the "modify_time" field.
func ModifyTimeNotNil() predicate.CWebsite {
	return predicate.CWebsite(sql.FieldNotNull(FieldModifyTime))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.CWebsite) predicate.CWebsite {
	return predicate.CWebsite(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.CWebsite) predicate.CWebsite {
	return predicate.CWebsite(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.CWebsite) predicate.CWebsite {
	return predicate.CWebsite(func(s *sql.Selector) {
		p(s.Not())
	})
}
